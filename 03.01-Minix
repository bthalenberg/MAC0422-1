Arquitetura do Minix
======================

* 4 camadas: kernal (escalonamento de processos, tempo, tabelas,sistema
  de mensagens), drivers (avstração dos dispositivos), estratégias de
  escalonamento, sistema de arquivo e comunicação (apresentam "máquina
  virtual"), processos de usuário.
* Apenas 1 camada em "espaço de kernal"
* Outras camandas possuem processos sem compartilhamento de memória:
  comunicação por mensagens. As mensagens são implementadas usando um
  chamada de sistemas específica. Essas mensagens têm uma estrutura 
  específica, em que é guardada um ponteiro para o texto e o processo
  que enviou. A pessoa que enviou é bloqueado enquando ocorre a
  mensagem. O recebedor terá a mensagem COPIADA dentro do outro 
  processo, para ser lida. Quem implementa esse envio é o SO, fazendo
  a parte do baixo nível. O processo que ENVIA manda uma mensagem
  com a chamada 'send'. O processo querecebe fica com um 'receive',
  aguardando até receber algo. O 'send-receive' faz uma chamada e
  espera por ela. Esse processo é síncrono.
* A mensagem é um processo síncrono, e é bem diferentes de sinais.
  Os sinais são processos ASSÍNCRONOS, em que o programa é interrompido
  no meio de qualquer ação.
* O envio de mensagens é feito nas camadas inferiores, ABAIXO de
  servidores. Para as aplicações, existe a biblioteca de programas de
  chamadas ao sistema, que fazem por si próprias mensagens para os
  componentes corretos.
* Sinais são tratados pelo Kernel, ao receber alguma transmissão, via
  o barramento, de um componente do hardware. Ele gera uma mensagem e 
  envia para o Kernel correspondente.
* Essa arquitetura é a arquitetura de microkernel.
